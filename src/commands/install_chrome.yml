description: >
  Install Google's Chrome browser, for use in browser testing. Note:
  only the latest stable release can be installed, as Google does not
  maintain a public archive of previous releases. Supports Debian/Ubuntu
  Linux, Alpine Linux (via Chromium), and macOS environments.

parameters:
  replace_existing:
    type: boolean
    default: false
    description: >
      If there is an existing installation of Google Chrome, replace it
      with the latest stable release?
  chrome_version:
    default: latest
    type: string
    description: >
      Version of Chrome to install, defaults to the latest stable release.
      To install an older release, specify a full chrome version number,
      e.g., 85.0.4183.83
      Only supported on centos and debian
      If replace_existing is false, this version is ignored.
  channel:
    description: |
      The release channel of Google Chrome to use. Defaults to 'stable'.
    type: enum
    enum: [ "stable", "beta" ]
    default: "stable"
  use_cache:
    description: |
      Install chrome using a cached version.
      Using this option will increase costs and does not improve times considerable, use only if having problems with download.
      Defaults to false.
    default: false
    type: boolean
  cache_key:
    description: |
      Cache key to save chrome.
      Defaults to v1.
    default: v1
    type: string
steps:
  - when:
      condition: <<parameters.use_cache>>
      steps:
      - restore_cache:
          keys:
          - chrome-<<parameters.cache_key>>-<<parameters.chrome_version>>-{{ arch }}
      - run:
          name: Process cache
          command: <<include(scripts/process_cache.sh)>>
          environment:
            ORB_PARAM_CHANNEL: << parameters.channel >>
  - run:
      name: Install Google Chrome
      environment:
        ORB_PARAM_CHROME_VERSION: <<parameters.chrome_version>>
        ORB_PARAM_REPLACE_EXISTING: <<parameters.replace_existing>>
        ORB_PARAM_CHANNEL: << parameters.channel >>
        ORB_PARAM_SAVE_CACHE: <<parameters.use_cache>>
      command: <<include(scripts/install_chrome.sh)>>
  - when:
      condition: <<parameters.use_cache>>
      steps:
      - save_cache:
          key: chrome-<<parameters.cache_key>>-<<parameters.chrome_version>>-{{ arch }}
          paths:
          - /tmp/chrome.tar.gz
